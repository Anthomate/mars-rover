services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: app_database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_database"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: dotnet_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Database=app_database;Username=app_user;Password=app_password
    ports:
      - "5000:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: web_frontend
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: